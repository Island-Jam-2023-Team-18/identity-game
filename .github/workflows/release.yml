name: Actions

on:
  push: { branches: [release/*] }

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
  get_version:
    name: Get release version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.substring }}
    steps:
      - name: Get version
        id: get_version
        uses: bhowell2/github-substring-action@v1.0.0
        with:
          value: ${{ github.ref }}
          index_of_str: "refs/heads/release/"

  release:
    name: Create release
    runs-on: ubuntu-latest
    needs: get_version
    outputs:
      url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create changelog
        id: create_changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          onlyLastTag: true
          stripHeaders: true

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.get_version.outputs.version }}
          release_name: v${{ needs.get_version.outputs.version }}
          draft: false
          prerelease: false
          body: ${{ steps.create_changelog.outputs.changelog }}

  build:
    name: Build ${{ matrix.targetPlatform }}
    needs:
      - get_version
      - release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2021.3.22f1
        targetPlatform:
          - StandaloneLinux64
          - StandaloneWindows64
          - StandaloneOSX
          - WebGL
    steps:
      # Checkout
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true

      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}

      # Tests
      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        with:
          unityVersion: ${{ matrix.unityVersion }}
          testMode: all

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        with:
          allowDirtyBuild: true
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          buildName: KurroPlease

      # Zip build folder
      - name: Zip build folder
        uses: papeloto/action-zip@v1
        with:
          files: build/${{ matrix.targetPlatform }}
          dest: KurroPlease-${{ needs.get_version.outputs.version }}-${{ matrix.targetPlatform }}.zip

      # Publish release asset
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.url }}
          asset_path: ./KurroPlease-${{ needs.get_version.outputs.version }}-${{ matrix.targetPlatform }}.zip
          asset_name: KurroPlease-${{ needs.get_version.outputs.version }}-${{ matrix.targetPlatform }}.zip
          asset_content_type: application/zip